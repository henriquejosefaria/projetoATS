/*
 * This file was automatically generated by EvoSuite
 * Thu Nov 21 22:10:04 GMT 2019
 */

package main.java.controller;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.util.NoSuchElementException;
import main.java.controller.Controller;
import main.java.model.UMCarroJa;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.util.SystemInUtil;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class Controller_ESTest extends Controller_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      UMCarroJa uMCarroJa0 = new UMCarroJa();
      SystemInUtil.addInputLine("E9Q*]");
      Controller controller0 = new Controller(uMCarroJa0);
      String string0 = controller0.caseNUses();
      assertEquals("", string0);
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      SystemInUtil.addInputLine("w3!h$,XM0}#psD,");
      SystemInUtil.addInputLine("w3!h$,XM0}#psD,");
      UMCarroJa uMCarroJa0 = new UMCarroJa();
      Controller controller0 = new Controller(uMCarroJa0);
      String string0 = controller0.caseLogin();
      assertEquals("Invalid Username", string0);
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      SystemInUtil.addInputLine("Eg/\"-!p4uJ?*SkKJ~4N");
      Controller controller0 = new Controller((UMCarroJa) null);
      String string0 = controller0.caseHistoryOwner();
      assertEquals("Intervalo Inv\u00E1lido", string0);
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      SystemInUtil.addInputLine("Menu Inigtial");
      UMCarroJa uMCarroJa0 = new UMCarroJa();
      Controller controller0 = new Controller(uMCarroJa0);
      String string0 = controller0.caseHistoryClient();
      assertEquals("Intervalo Inv\u00E1lido", string0);
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      SystemInUtil.addInputLine("Menu Initial");
      UMCarroJa uMCarroJa0 = new UMCarroJa();
      Controller controller0 = new Controller(uMCarroJa0);
      String string0 = controller0.caseDistance();
      assertEquals("", string0);
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      SystemInUtil.addInputLine("&O4H8g,i;U#2&QY");
      SystemInUtil.addInputLine("&O4H8g,i;U#2&QY");
      UMCarroJa uMCarroJa0 = new UMCarroJa();
      Controller controller0 = new Controller(uMCarroJa0);
      String string0 = controller0.caseCheapestNear();
      assertEquals("New rental inv\u00E1lido", string0);
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      SystemInUtil.addInputLine("w3!h$,XM0}#psD,");
      SystemInUtil.addInputLine("w3!h$,XM0}#psD,");
      UMCarroJa uMCarroJa0 = new UMCarroJa();
      Controller controller0 = new Controller(uMCarroJa0);
      String string0 = controller0.caseAutonomy();
      assertEquals("New rental inv\u00E1lido", string0);
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      SystemInUtil.addInputLine("\tR[pos] -> Refill car\n\tC[pos] [price] -> Change Price\n\tD[pos] -> Toggle Availability\n\tT[pos] -> total faturado");
      UMCarroJa uMCarroJa0 = new UMCarroJa();
      Controller controller0 = new Controller(uMCarroJa0);
      String string0 = controller0.caseAddCar();
      assertEquals("Parametros Inv\u00E1lidos", string0);
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      Controller controller0 = new Controller((UMCarroJa) null);
      // Undeclared exception!
      try { 
        controller0.run();
        fail("Expecting exception: NoSuchElementException");
      
      } catch(NoSuchElementException e) {
         //
         // No line found
         //
         verifyException("java.util.Scanner", e);
      }
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      SystemInUtil.addInputLine("9");
      UMCarroJa uMCarroJa0 = new UMCarroJa();
      Controller controller0 = new Controller(uMCarroJa0);
      // Undeclared exception!
      try { 
        controller0.run();
        fail("Expecting exception: NumberFormatException");
      
      } catch(NumberFormatException e) {
         //
         // For input string: \"\u001Bc\u001B[31m\t--INITIAL--
         // \u001B[0m
         // 
         // 1- Login
         // 2- Registar novo utilizador
         // \"
         //
         verifyException("java.lang.NumberFormatException", e);
      }
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      SystemInUtil.addInputLine("&?q");
      UMCarroJa uMCarroJa0 = new UMCarroJa();
      Controller controller0 = new Controller(uMCarroJa0);
      // Undeclared exception!
      try { 
        controller0.caseSpecific();
        fail("Expecting exception: NoSuchElementException");
      
      } catch(NoSuchElementException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.util.Scanner", e);
      }
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      Controller controller0 = new Controller((UMCarroJa) null);
      // Undeclared exception!
      try { 
        controller0.caseReviewRental();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("main.java.controller.Controller", e);
      }
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      SystemInUtil.addInputLine("\n");
      SystemInUtil.addInputLine("\n");
      UMCarroJa uMCarroJa0 = new UMCarroJa();
      Controller controller0 = new Controller(uMCarroJa0);
      // Undeclared exception!
      try { 
        controller0.caseRegisterOwner();
        fail("Expecting exception: NoSuchElementException");
      
      } catch(NoSuchElementException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.util.Scanner", e);
      }
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      SystemInUtil.addInputLine("\n");
      SystemInUtil.addInputLine("\n");
      UMCarroJa uMCarroJa0 = new UMCarroJa();
      Controller controller0 = new Controller(uMCarroJa0);
      // Undeclared exception!
      try { 
        controller0.caseRegisterClient();
        fail("Expecting exception: NoSuchElementException");
      
      } catch(NoSuchElementException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.util.Scanner", e);
      }
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      Controller controller0 = new Controller((UMCarroJa) null);
      // Undeclared exception!
      try { 
        controller0.casePending();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("main.java.controller.Controller", e);
      }
  }

  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      UMCarroJa uMCarroJa0 = new UMCarroJa();
      Controller controller0 = new Controller(uMCarroJa0);
      // Undeclared exception!
      try { 
        controller0.caseNUses();
        fail("Expecting exception: NoSuchElementException");
      
      } catch(NoSuchElementException e) {
         //
         // No line found
         //
         verifyException("java.util.Scanner", e);
      }
  }

  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      UMCarroJa uMCarroJa0 = new UMCarroJa();
      Controller controller0 = new Controller(uMCarroJa0);
      // Undeclared exception!
      try { 
        controller0.caseLogin();
        fail("Expecting exception: NoSuchElementException");
      
      } catch(NoSuchElementException e) {
         //
         // No line found
         //
         verifyException("java.util.Scanner", e);
      }
  }

  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      SystemInUtil.addInputLine("w3!h$,XM0}#psD,");
      SystemInUtil.addInputLine("w3!h$,XM0}#psD,");
      Controller controller0 = new Controller((UMCarroJa) null);
      // Undeclared exception!
      try { 
        controller0.caseLogin();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("main.java.controller.Controller", e);
      }
  }

  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      UMCarroJa uMCarroJa0 = new UMCarroJa();
      Controller controller0 = new Controller(uMCarroJa0);
      // Undeclared exception!
      try { 
        controller0.caseDistance();
        fail("Expecting exception: NoSuchElementException");
      
      } catch(NoSuchElementException e) {
         //
         // No line found
         //
         verifyException("java.util.Scanner", e);
      }
  }

  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      SystemInUtil.addInputLine("Parametros Inv\u00E1lidos");
      Controller controller0 = new Controller((UMCarroJa) null);
      // Undeclared exception!
      try { 
        controller0.caseClosest();
        fail("Expecting exception: NoSuchElementException");
      
      } catch(NoSuchElementException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.util.Scanner", e);
      }
  }

  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      SystemInUtil.addInputLine("Parametros Inv\u00E1lidos");
      Controller controller0 = new Controller((UMCarroJa) null);
      // Undeclared exception!
      try { 
        controller0.caseCheapestNear();
        fail("Expecting exception: NoSuchElementException");
      
      } catch(NoSuchElementException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.util.Scanner", e);
      }
  }

  @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      SystemInUtil.addInputLine("Z.c)b\"49nNj");
      UMCarroJa uMCarroJa0 = new UMCarroJa();
      Controller controller0 = new Controller(uMCarroJa0);
      // Undeclared exception!
      try { 
        controller0.caseCheapest();
        fail("Expecting exception: NoSuchElementException");
      
      } catch(NoSuchElementException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.util.Scanner", e);
      }
  }

  @Test(timeout = 4000)
  public void test22()  throws Throwable  {
      Controller controller0 = new Controller((UMCarroJa) null);
      // Undeclared exception!
      try { 
        controller0.caseCarOverview();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("main.java.controller.Controller", e);
      }
  }

  @Test(timeout = 4000)
  public void test23()  throws Throwable  {
      SystemInUtil.addInputLine("`+</opsJoiIQF=>KZHE");
      UMCarroJa uMCarroJa0 = new UMCarroJa();
      Controller controller0 = new Controller(uMCarroJa0);
      // Undeclared exception!
      try { 
        controller0.caseAutonomy();
        fail("Expecting exception: NoSuchElementException");
      
      } catch(NoSuchElementException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.util.Scanner", e);
      }
  }

  @Test(timeout = 4000)
  public void test24()  throws Throwable  {
      SystemInUtil.addInputLine("\n");
      SystemInUtil.addInputLine("\n");
      UMCarroJa uMCarroJa0 = new UMCarroJa();
      Controller controller0 = new Controller(uMCarroJa0);
      // Undeclared exception!
      try { 
        controller0.caseAddCar();
        fail("Expecting exception: NoSuchElementException");
      
      } catch(NoSuchElementException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.util.Scanner", e);
      }
  }

  @Test(timeout = 4000)
  public void test25()  throws Throwable  {
      SystemInUtil.addInputLine("&?q");
      UMCarroJa uMCarroJa0 = new UMCarroJa();
      Controller controller0 = new Controller(uMCarroJa0);
      controller0.run();
  }

  @Test(timeout = 4000)
  public void test26()  throws Throwable  {
      UMCarroJa uMCarroJa0 = new UMCarroJa();
      Controller controller0 = new Controller(uMCarroJa0);
      // Undeclared exception!
      try { 
        controller0.caseAddCar();
        fail("Expecting exception: NoSuchElementException");
      
      } catch(NoSuchElementException e) {
         //
         // No line found
         //
         verifyException("java.util.Scanner", e);
      }
  }

  @Test(timeout = 4000)
  public void test27()  throws Throwable  {
      UMCarroJa uMCarroJa0 = new UMCarroJa();
      Controller controller0 = new Controller(uMCarroJa0);
      // Undeclared exception!
      try { 
        controller0.caseRegisterClient();
        fail("Expecting exception: NoSuchElementException");
      
      } catch(NoSuchElementException e) {
         //
         // No line found
         //
         verifyException("java.util.Scanner", e);
      }
  }

  @Test(timeout = 4000)
  public void test28()  throws Throwable  {
      UMCarroJa uMCarroJa0 = new UMCarroJa();
      Controller controller0 = new Controller(uMCarroJa0);
      // Undeclared exception!
      try { 
        controller0.caseSpecific();
        fail("Expecting exception: NoSuchElementException");
      
      } catch(NoSuchElementException e) {
         //
         // No line found
         //
         verifyException("java.util.Scanner", e);
      }
  }

  @Test(timeout = 4000)
  public void test29()  throws Throwable  {
      UMCarroJa uMCarroJa0 = new UMCarroJa();
      Controller controller0 = new Controller(uMCarroJa0);
      // Undeclared exception!
      try { 
        controller0.caseHistoryClient();
        fail("Expecting exception: NoSuchElementException");
      
      } catch(NoSuchElementException e) {
         //
         // No line found
         //
         verifyException("java.util.Scanner", e);
      }
  }

  @Test(timeout = 4000)
  public void test30()  throws Throwable  {
      UMCarroJa uMCarroJa0 = new UMCarroJa();
      Controller controller0 = new Controller(uMCarroJa0);
      // Undeclared exception!
      try { 
        controller0.caseCheapest();
        fail("Expecting exception: NoSuchElementException");
      
      } catch(NoSuchElementException e) {
         //
         // No line found
         //
         verifyException("java.util.Scanner", e);
      }
  }

  @Test(timeout = 4000)
  public void test31()  throws Throwable  {
      Controller controller0 = new Controller((UMCarroJa) null);
      // Undeclared exception!
      try { 
        controller0.caseCheapestNear();
        fail("Expecting exception: NoSuchElementException");
      
      } catch(NoSuchElementException e) {
         //
         // No line found
         //
         verifyException("java.util.Scanner", e);
      }
  }

  @Test(timeout = 4000)
  public void test32()  throws Throwable  {
      UMCarroJa uMCarroJa0 = new UMCarroJa();
      Controller controller0 = new Controller(uMCarroJa0);
      // Undeclared exception!
      try { 
        controller0.caseRegisterOwner();
        fail("Expecting exception: NoSuchElementException");
      
      } catch(NoSuchElementException e) {
         //
         // No line found
         //
         verifyException("java.util.Scanner", e);
      }
  }

  @Test(timeout = 4000)
  public void test33()  throws Throwable  {
      UMCarroJa uMCarroJa0 = new UMCarroJa();
      Controller controller0 = new Controller(uMCarroJa0);
      // Undeclared exception!
      try { 
        controller0.caseAutonomy();
        fail("Expecting exception: NoSuchElementException");
      
      } catch(NoSuchElementException e) {
         //
         // No line found
         //
         verifyException("java.util.Scanner", e);
      }
  }

  @Test(timeout = 4000)
  public void test34()  throws Throwable  {
      Controller controller0 = new Controller((UMCarroJa) null);
      // Undeclared exception!
      try { 
        controller0.caseDistance();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("main.java.controller.Controller", e);
      }
  }

  @Test(timeout = 4000)
  public void test35()  throws Throwable  {
      Controller controller0 = new Controller((UMCarroJa) null);
      // Undeclared exception!
      try { 
        controller0.caseHistoryOwner();
        fail("Expecting exception: NoSuchElementException");
      
      } catch(NoSuchElementException e) {
         //
         // No line found
         //
         verifyException("java.util.Scanner", e);
      }
  }

  @Test(timeout = 4000)
  public void test36()  throws Throwable  {
      Controller controller0 = new Controller((UMCarroJa) null);
      // Undeclared exception!
      try { 
        controller0.caseNUses();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("main.java.controller.Controller", e);
      }
  }

  @Test(timeout = 4000)
  public void test37()  throws Throwable  {
      Controller controller0 = new Controller((UMCarroJa) null);
      // Undeclared exception!
      try { 
        controller0.caseClosest();
        fail("Expecting exception: NoSuchElementException");
      
      } catch(NoSuchElementException e) {
         //
         // No line found
         //
         verifyException("java.util.Scanner", e);
      }
  }
}
