<?xml version="1.0" encoding="UTF-8" ?>
<testsuite tests="3" failures="0" name="main.java.model.Weather_ESTest" time="0.019" errors="3" skipped="0">
  <properties>
    <property name="java.runtime.name" value="OpenJDK Runtime Environment"/>
    <property name="java.vm.version" value="11.0.2+9"/>
    <property name="sun.boot.library.path" value="/Library/Java/JavaVirtualMachines/openjdk-11.0.2.jdk/Contents/Home/lib"/>
    <property name="gopherProxySet" value="false"/>
    <property name="maven.multiModuleProjectDirectory" value="/Users/henrique/Documents/4ano/ATS/projeto/demo1"/>
    <property name="java.vm.vendor" value="Oracle Corporation"/>
    <property name="java.vendor.url" value="http://java.oracle.com/"/>
    <property name="guice.disable.misplaced.annotation.check" value="true"/>
    <property name="path.separator" value=":"/>
    <property name="java.vm.name" value="OpenJDK 64-Bit Server VM"/>
    <property name="sun.os.patch.level" value="unknown"/>
    <property name="user.country" value="PT"/>
    <property name="sun.java.launcher" value="SUN_STANDARD"/>
    <property name="java.vm.specification.name" value="Java Virtual Machine Specification"/>
    <property name="user.dir" value="/Users/henrique/Documents/4ano/ATS/projeto/demo1"/>
    <property name="java.vm.compressedOopsMode" value="Zero based"/>
    <property name="java.runtime.version" value="11.0.2+9"/>
    <property name="java.awt.graphicsenv" value="sun.awt.CGraphicsEnvironment"/>
    <property name="os.arch" value="x86_64"/>
    <property name="java.io.tmpdir" value="/var/folders/rm/l9695zr55lbfkw2m0r27vmzm0000gn/T/"/>
    <property name="line.separator" value="
"/>
    <property name="java.vm.specification.vendor" value="Oracle Corporation"/>
    <property name="os.name" value="Mac OS X"/>
    <property name="classworlds.conf" value="/opt/apache-maven/bin/m2.conf"/>
    <property name="sun.jnu.encoding" value="UTF-8"/>
    <property name="java.library.path" value="/Users/henrique/Library/Java/Extensions:/Library/Java/Extensions:/Network/Library/Java/Extensions:/System/Library/Java/Extensions:/usr/lib/java:."/>
    <property name="maven.conf" value="/opt/apache-maven/conf"/>
    <property name="jdk.debug" value="release"/>
    <property name="java.class.version" value="55.0"/>
    <property name="java.specification.name" value="Java Platform API Specification"/>
    <property name="sun.management.compiler" value="HotSpot 64-Bit Tiered Compilers"/>
    <property name="os.version" value="10.14.3"/>
    <property name="library.jansi.path" value="/opt/apache-maven/lib/jansi-native"/>
    <property name="http.nonProxyHosts" value="local|*.local|169.254/16|*.169.254/16"/>
    <property name="user.home" value="/Users/henrique"/>
    <property name="user.timezone" value="Europe/Lisbon"/>
    <property name="java.awt.printerjob" value="sun.lwawt.macosx.CPrinterJob"/>
    <property name="file.encoding" value="UTF-8"/>
    <property name="java.specification.version" value="11"/>
    <property name="user.name" value="henrique"/>
    <property name="java.class.path" value="/opt/apache-maven/boot/plexus-classworlds-2.6.0.jar"/>
    <property name="java.vm.specification.version" value="11"/>
    <property name="sun.arch.data.model" value="64"/>
    <property name="sun.java.command" value="org.codehaus.plexus.classworlds.launcher.Launcher package"/>
    <property name="java.home" value="/Library/Java/JavaVirtualMachines/openjdk-11.0.2.jdk/Contents/Home"/>
    <property name="user.language" value="pt"/>
    <property name="java.specification.vendor" value="Oracle Corporation"/>
    <property name="awt.toolkit" value="sun.lwawt.macosx.LWCToolkit"/>
    <property name="java.vm.info" value="mixed mode"/>
    <property name="java.version" value="11.0.2"/>
    <property name="java.vendor" value="Oracle Corporation"/>
    <property name="maven.home" value="/opt/apache-maven"/>
    <property name="file.separator" value="/"/>
    <property name="java.version.date" value="2019-01-15"/>
    <property name="java.vendor.url.bug" value="http://bugreport.java.com/bugreport/"/>
    <property name="sun.io.unicode.encoding" value="UnicodeBig"/>
    <property name="sun.cpu.endian" value="little"/>
    <property name="java.vendor.version" value="18.9"/>
    <property name="socksNonProxyHosts" value="local|*.local|169.254/16|*.169.254/16"/>
    <property name="ftp.nonProxyHosts" value="local|*.local|169.254/16|*.169.254/16"/>
    <property name="sun.cpu.isalist" value=""/>
  </properties>
  <testcase classname="main.java.model.Weather_ESTest" name="test0" time="0.004">
    <error message="Operand stack overflow
Exception Details:
  Location:
    main/java/model/Weather.getSeasonDelay()D @3: new
  Reason:
    Exceeded max stack size.
  Current Frame:
    bci: @3
    flags: { }
    locals: { &apos;main/java/model/Weather&apos; }
    stack: { }
  Bytecode:
    0000000: b800 15bb 003b 59b8 0029 9900 0e58 bb00
    0000010: 3d59 b700 3ea7 0006 b700 3f4c b800 152a
    0000020: b700 414d 023e 2cb6 0046 ab00 0000 0080
    0000030: 0000 0003 9401 ee2d 0000 0046 9446 2bcf
    0000040: 0000 0022 0021 4b9b 0000 006a 2c12 48b6
    0000050: 004c b800 5212 53b6 0057 b800 1599 004d
    0000060: 033e b800 5212 58b6 0057 b800 15a7 003d
    0000070: 2c12 5ab6 004c b800 5212 5bb6 0057 b800
    0000080: 1599 0029 043e b800 5212 5cb6 0057 b800
    0000090: 15a7 0019 2c12 5eb6 004c b800 5212 5fb6
    00000a0: 0057 b800 1599 0005 053e 1daa 0000 003d
    00000b0: 0000 0000 0000 0002 0000 0019 0000 0025
    00000c0: 0000 0031 b800 152b b600 6214 0063 73af
    00000d0: b800 152b b600 6214 0065 73af b800 152b
    00000e0: b600 6214 0067 73af b800 152b b600 6214
    00000f0: 0069 73af                              
" type="java.lang.VerifyError">java.lang.VerifyError: Operand stack overflow
Exception Details:
  Location:
    main/java/model/Weather.getSeasonDelay()D @3: new
  Reason:
    Exceeded max stack size.
  Current Frame:
    bci: @3
    flags: { }
    locals: { &apos;main/java/model/Weather&apos; }
    stack: { }
  Bytecode:
    0000000: b800 15bb 003b 59b8 0029 9900 0e58 bb00
    0000010: 3d59 b700 3ea7 0006 b700 3f4c b800 152a
    0000020: b700 414d 023e 2cb6 0046 ab00 0000 0080
    0000030: 0000 0003 9401 ee2d 0000 0046 9446 2bcf
    0000040: 0000 0022 0021 4b9b 0000 006a 2c12 48b6
    0000050: 004c b800 5212 53b6 0057 b800 1599 004d
    0000060: 033e b800 5212 58b6 0057 b800 15a7 003d
    0000070: 2c12 5ab6 004c b800 5212 5bb6 0057 b800
    0000080: 1599 0029 043e b800 5212 5cb6 0057 b800
    0000090: 15a7 0019 2c12 5eb6 004c b800 5212 5fb6
    00000a0: 0057 b800 1599 0005 053e 1daa 0000 003d
    00000b0: 0000 0000 0000 0002 0000 0019 0000 0025
    00000c0: 0000 0031 b800 152b b600 6214 0063 73af
    00000d0: b800 152b b600 6214 0065 73af b800 152b
    00000e0: b600 6214 0067 73af b800 152b b600 6214
    00000f0: 0069 73af                              

	at main.java.model.Weather_ESTest.test0(Weather_ESTest.java:25)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:47)
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:44)
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)
	at org.junit.internal.runners.statements.FailOnTimeout$StatementThread.run(FailOnTimeout.java:74)
</error>
  </testcase>
  <testcase classname="main.java.model.Weather_ESTest" name="test1" time="0.004">
    <error message="Operand stack overflow
Exception Details:
  Location:
    main/java/model/Weather.getSeasonDelay()D @3: new
  Reason:
    Exceeded max stack size.
  Current Frame:
    bci: @3
    flags: { }
    locals: { &apos;main/java/model/Weather&apos; }
    stack: { }
  Bytecode:
    0000000: b800 15bb 003b 59b8 0029 9900 0e58 bb00
    0000010: 3d59 b700 3ea7 0006 b700 3f4c b800 152a
    0000020: b700 414d 023e 2cb6 0046 ab00 0000 0080
    0000030: 0000 0003 9401 ee2d 0000 0046 9446 2bcf
    0000040: 0000 0022 0021 4b9b 0000 006a 2c12 48b6
    0000050: 004c b800 5212 53b6 0057 b800 1599 004d
    0000060: 033e b800 5212 58b6 0057 b800 15a7 003d
    0000070: 2c12 5ab6 004c b800 5212 5bb6 0057 b800
    0000080: 1599 0029 043e b800 5212 5cb6 0057 b800
    0000090: 15a7 0019 2c12 5eb6 004c b800 5212 5fb6
    00000a0: 0057 b800 1599 0005 053e 1daa 0000 003d
    00000b0: 0000 0000 0000 0002 0000 0019 0000 0025
    00000c0: 0000 0031 b800 152b b600 6214 0063 73af
    00000d0: b800 152b b600 6214 0065 73af b800 152b
    00000e0: b600 6214 0067 73af b800 152b b600 6214
    00000f0: 0069 73af                              
" type="java.lang.VerifyError">java.lang.VerifyError: Operand stack overflow
Exception Details:
  Location:
    main/java/model/Weather.getSeasonDelay()D @3: new
  Reason:
    Exceeded max stack size.
  Current Frame:
    bci: @3
    flags: { }
    locals: { &apos;main/java/model/Weather&apos; }
    stack: { }
  Bytecode:
    0000000: b800 15bb 003b 59b8 0029 9900 0e58 bb00
    0000010: 3d59 b700 3ea7 0006 b700 3f4c b800 152a
    0000020: b700 414d 023e 2cb6 0046 ab00 0000 0080
    0000030: 0000 0003 9401 ee2d 0000 0046 9446 2bcf
    0000040: 0000 0022 0021 4b9b 0000 006a 2c12 48b6
    0000050: 004c b800 5212 53b6 0057 b800 1599 004d
    0000060: 033e b800 5212 58b6 0057 b800 15a7 003d
    0000070: 2c12 5ab6 004c b800 5212 5bb6 0057 b800
    0000080: 1599 0029 043e b800 5212 5cb6 0057 b800
    0000090: 15a7 0019 2c12 5eb6 004c b800 5212 5fb6
    00000a0: 0057 b800 1599 0005 053e 1daa 0000 003d
    00000b0: 0000 0000 0000 0002 0000 0019 0000 0025
    00000c0: 0000 0031 b800 152b b600 6214 0063 73af
    00000d0: b800 152b b600 6214 0065 73af b800 152b
    00000e0: b600 6214 0067 73af b800 152b b600 6214
    00000f0: 0069 73af                              

	at main.java.model.Weather_ESTest.test1(Weather_ESTest.java:32)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:47)
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:44)
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)
	at org.junit.internal.runners.statements.FailOnTimeout$StatementThread.run(FailOnTimeout.java:74)
</error>
  </testcase>
  <testcase classname="main.java.model.Weather_ESTest" name="test2" time="0.011">
    <error message="Operand stack overflow
Exception Details:
  Location:
    main/java/model/Weather.getSeasonDelay()D @3: new
  Reason:
    Exceeded max stack size.
  Current Frame:
    bci: @3
    flags: { }
    locals: { &apos;main/java/model/Weather&apos; }
    stack: { }
  Bytecode:
    0000000: b800 15bb 003b 59b8 0029 9900 0e58 bb00
    0000010: 3d59 b700 3ea7 0006 b700 3f4c b800 152a
    0000020: b700 414d 023e 2cb6 0046 ab00 0000 0080
    0000030: 0000 0003 9401 ee2d 0000 0046 9446 2bcf
    0000040: 0000 0022 0021 4b9b 0000 006a 2c12 48b6
    0000050: 004c b800 5212 53b6 0057 b800 1599 004d
    0000060: 033e b800 5212 58b6 0057 b800 15a7 003d
    0000070: 2c12 5ab6 004c b800 5212 5bb6 0057 b800
    0000080: 1599 0029 043e b800 5212 5cb6 0057 b800
    0000090: 15a7 0019 2c12 5eb6 004c b800 5212 5fb6
    00000a0: 0057 b800 1599 0005 053e 1daa 0000 003d
    00000b0: 0000 0000 0000 0002 0000 0019 0000 0025
    00000c0: 0000 0031 b800 152b b600 6214 0063 73af
    00000d0: b800 152b b600 6214 0065 73af b800 152b
    00000e0: b600 6214 0067 73af b800 152b b600 6214
    00000f0: 0069 73af                              
" type="java.lang.VerifyError">java.lang.VerifyError: Operand stack overflow
Exception Details:
  Location:
    main/java/model/Weather.getSeasonDelay()D @3: new
  Reason:
    Exceeded max stack size.
  Current Frame:
    bci: @3
    flags: { }
    locals: { &apos;main/java/model/Weather&apos; }
    stack: { }
  Bytecode:
    0000000: b800 15bb 003b 59b8 0029 9900 0e58 bb00
    0000010: 3d59 b700 3ea7 0006 b700 3f4c b800 152a
    0000020: b700 414d 023e 2cb6 0046 ab00 0000 0080
    0000030: 0000 0003 9401 ee2d 0000 0046 9446 2bcf
    0000040: 0000 0022 0021 4b9b 0000 006a 2c12 48b6
    0000050: 004c b800 5212 53b6 0057 b800 1599 004d
    0000060: 033e b800 5212 58b6 0057 b800 15a7 003d
    0000070: 2c12 5ab6 004c b800 5212 5bb6 0057 b800
    0000080: 1599 0029 043e b800 5212 5cb6 0057 b800
    0000090: 15a7 0019 2c12 5eb6 004c b800 5212 5fb6
    00000a0: 0057 b800 1599 0005 053e 1daa 0000 003d
    00000b0: 0000 0000 0000 0002 0000 0019 0000 0025
    00000c0: 0000 0031 b800 152b b600 6214 0063 73af
    00000d0: b800 152b b600 6214 0065 73af b800 152b
    00000e0: b600 6214 0067 73af b800 152b b600 6214
    00000f0: 0069 73af                              

	at main.java.model.Weather_ESTest.test2(Weather_ESTest.java:45)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:47)
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:44)
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)
	at org.junit.internal.runners.statements.FailOnTimeout$StatementThread.run(FailOnTimeout.java:74)
</error>
  </testcase>
</testsuite>