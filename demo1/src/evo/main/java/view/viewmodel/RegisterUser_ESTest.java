/*
 * This file was automatically generated by EvoSuite
 * Thu Nov 21 22:50:07 GMT 2019
 */

package main.java.view.viewmodel;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.shaded.org.mockito.Mockito.*;
import main.java.utils.Point;
import main.java.view.viewmodel.RegisterUser;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.ViolatedAssumptionAnswer;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class RegisterUser_ESTest extends RegisterUser_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      RegisterUser registerUser0 = new RegisterUser((String) null, (String) null, (String) null, (String) null, 1);
      registerUser0.getPos();
      assertEquals(1, registerUser0.getNif());
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      RegisterUser registerUser0 = new RegisterUser("", "", (String) null, (String) null, 673, (Point) null);
      String string0 = registerUser0.getPasswd();
      assertEquals(673, registerUser0.getNif());
      assertNull(string0);
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      RegisterUser registerUser0 = new RegisterUser("", "", "", "", 104);
      registerUser0.getPasswd();
      assertEquals(104, registerUser0.getNif());
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      RegisterUser registerUser0 = new RegisterUser((String) null, (String) null, (String) null, (String) null, 1);
      int int0 = registerUser0.getNif();
      assertEquals(1, int0);
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      RegisterUser registerUser0 = new RegisterUser("main.java.utils.Point", "6YD*H6~|TZq<eOVk", "6YD*H6~|TZq<eOVk", "main.java.utils.Point", (-2825));
      int int0 = registerUser0.getNif();
      assertEquals("main.java.utils.Point", registerUser0.getName());
      assertEquals("main.java.utils.Point", registerUser0.getAddress());
      assertEquals("6YD*H6~|TZq<eOVk", registerUser0.getPasswd());
      assertEquals("6YD*H6~|TZq<eOVk", registerUser0.getEmail());
      assertEquals((-2825), int0);
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      RegisterUser registerUser0 = new RegisterUser((String) null, (String) null, (String) null, (String) null, 1);
      registerUser0.getName();
      assertEquals(1, registerUser0.getNif());
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      RegisterUser registerUser0 = new RegisterUser("", "", "", "", 104);
      registerUser0.getName();
      assertEquals(104, registerUser0.getNif());
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      RegisterUser registerUser0 = new RegisterUser((String) null, (String) null, (String) null, (String) null, 1);
      registerUser0.getEmail();
      assertEquals(1, registerUser0.getNif());
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      RegisterUser registerUser0 = new RegisterUser("", "", "", "", 1);
      registerUser0.getEmail();
      assertEquals(1, registerUser0.getNif());
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      RegisterUser registerUser0 = new RegisterUser((String) null, (String) null, (String) null, (String) null, 1);
      registerUser0.getAddress();
      assertEquals(1, registerUser0.getNif());
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      RegisterUser registerUser0 = new RegisterUser("J'M;IESI|p`AD 4", "Nj6O", "y9*tph!3k@ap", "", 1490);
      String string0 = registerUser0.getAddress();
      assertEquals(1490, registerUser0.getNif());
      assertEquals("", string0);
      assertEquals("Nj6O", registerUser0.getEmail());
      assertEquals("J'M;IESI|p`AD 4", registerUser0.getName());
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      Point point0 = mock(Point.class, new ViolatedAssumptionAnswer());
      RegisterUser registerUser0 = new RegisterUser("vDzH-", "vDzH-", "vDzH-", "vDzH-", 0, point0);
      registerUser0.getAddress();
      assertEquals(0, registerUser0.getNif());
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      Point point0 = mock(Point.class, new ViolatedAssumptionAnswer());
      RegisterUser registerUser0 = new RegisterUser("vDzH-", "vDzH-", "vDzH-", "vDzH-", 0, point0);
      registerUser0.getName();
      assertEquals(0, registerUser0.getNif());
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      Point point0 = mock(Point.class, new ViolatedAssumptionAnswer());
      RegisterUser registerUser0 = new RegisterUser("vDzH-", "vDzH-", "vDzH-", "vDzH-", 0, point0);
      registerUser0.getPasswd();
      assertEquals(0, registerUser0.getNif());
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      Point point0 = mock(Point.class, new ViolatedAssumptionAnswer());
      RegisterUser registerUser0 = new RegisterUser("vDzH-", "vDzH-", "vDzH-", "vDzH-", 0, point0);
      registerUser0.getEmail();
      assertEquals(0, registerUser0.getNif());
  }

  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      Point point0 = mock(Point.class, new ViolatedAssumptionAnswer());
      RegisterUser registerUser0 = new RegisterUser("vDzH-", "vDzH-", "vDzH-", "vDzH-", 0, point0);
      int int0 = registerUser0.getNif();
      assertEquals(0, int0);
  }
}
