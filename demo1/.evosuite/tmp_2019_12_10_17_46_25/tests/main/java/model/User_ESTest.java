/*
 * This file was automatically generated by EvoSuite
 * Tue Dec 10 18:39:09 GMT 2019
 */

package main.java.model;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import main.java.model.Client;
import main.java.model.Owner;
import main.java.model.User;
import main.java.utils.Point;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class User_ESTest extends User_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      Double double0 = new Double(0.0);
      Point point0 = new Point(double0, double0);
      Client client0 = new Client(point0, "main.java.model.CarModel", "main.java.model.CarModel", "main.java.model.CarModel", "main.java.model.CarModel", 0);
      assertEquals(100, client0.getRates());
      
      client0.rate(0);
      client0.rate((-1));
      int int0 = client0.getRates();
      assertEquals(0, int0);
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      Double double0 = new Double(0.0);
      Point point0 = new Point(double0, double0);
      Client client0 = new Client(point0, ";dRy]O10!N6", (String) null, ";dRy]O10!N6", (String) null, 1);
      assertEquals(100, client0.getRates());
      
      client0.rate(0);
      client0.myclone();
      assertEquals(0, client0.getRates());
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      Double double0 = new Double((-1.0));
      Point point0 = new Point(double0, double0);
      Client client0 = new Client(point0, "", "", "", "", (-1766));
      User user0 = client0.myclone();
      assertEquals(100, user0.getRates());
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      Owner owner0 = new Owner("%.2f", "%.2f", "main.java.utils.Point", (-1), "main.java.utils.Point");
      owner0.rate((-1));
      owner0.myclone();
      assertEquals((-1), owner0.getRates());
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      Owner owner0 = new Owner((String) null, "%&LG", (String) null, 508, (String) null);
      String string0 = owner0.getPasswd();
      assertNull(string0);
      assertEquals(100, owner0.getRates());
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      Owner owner0 = new Owner("iEO6|Z|c4@}EO\"y:z", "iEO6|Z|c4@}EO\"y:z", "iEO6|Z|c4@}EO\"y:z", 1699, "*S =_f\"M!C}XT?sO");
      String string0 = owner0.getPasswd();
      assertEquals("*S =_f\"M!C}XT?sO", string0);
      assertEquals(100, owner0.getRates());
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      Double double0 = new Double((-5084.99));
      Point point0 = new Point(double0, double0);
      Client client0 = new Client(point0, "Client:        ", "", "", "Client:        ", 1);
      String string0 = client0.getPasswd();
      assertEquals("", string0);
      assertEquals(100, client0.getRates());
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      Owner owner0 = new Owner((String) null, "", "", 0, (String) null);
      String string0 = owner0.getEmail();
      assertNull(string0);
      assertEquals(100, owner0.getRates());
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      Double double0 = new Double((-1160.47926968));
      Point point0 = new Point(double0, double0);
      Client client0 = new Client(point0, "main.java.model.CarModel", ")", "main.java.model.CarModel", ")", 194);
      String string0 = client0.getEmail();
      assertEquals(100, client0.getRates());
      assertEquals("main.java.model.CarModel", string0);
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      Double double0 = new Double((-1.0));
      Point point0 = new Point(double0, double0);
      Client client0 = new Client(point0, "", "", "", "", (-1766));
      client0.getEmail();
      assertEquals(100, client0.getRates());
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      Double double0 = new Double((-1.0));
      Point point0 = new Point(double0, double0);
      Client client0 = new Client(point0, (String) null, "3Wi", "3Wi", "", 331);
      client0.equals(client0);
      assertEquals(100, client0.getRates());
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      Double double0 = new Double((-1.0));
      Point point0 = new Point(double0, double0);
      Client client0 = new Client(point0, (String) null, "3Wi", "3Wi", "", 331);
      client0.equals((Object) null);
      assertEquals(100, client0.getRates());
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      Client client0 = new Client((Point) null, "", "", "+d!zu", "`r", 0);
      // Undeclared exception!
      try { 
        client0.myclone();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("main.java.model.Client", e);
      }
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      Double double0 = new Double(0.0);
      Point point0 = new Point(double0, double0);
      Client client0 = new Client(point0, "", "", "", "", (-1520));
      Client client1 = new Client((Point) null, "", "", "w.1!v", "<+ICy3Ft9{t", 7);
      // Undeclared exception!
      try { 
        client1.equals(client0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("main.java.model.Client", e);
      }
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      Owner owner0 = new Owner("*Z)U=>UUq)7nnoI{V%z", "*Z)U=>UUq)7nnoI{V%z", "*Z)U=>UUq)7nnoI{V%z", (-1719145503), "*Z)U=>UUq)7nnoI{V%z");
      int int0 = owner0.getRates();
      assertEquals(100, int0);
  }

  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      Double double0 = new Double(0.0);
      Point point0 = new Point(double0, double0);
      Client client0 = new Client(point0, "", "", "", "", (-1520));
      client0.hashCode();
      assertEquals(100, client0.getRates());
  }

  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      Owner owner0 = new Owner("F6BW", "F6BW", "F6BW", (-2831), "F6BW");
      assertEquals(100, owner0.getRates());
      
      owner0.rate((-2831));
      int int0 = owner0.getRates();
      assertEquals((-2831), int0);
  }
}
