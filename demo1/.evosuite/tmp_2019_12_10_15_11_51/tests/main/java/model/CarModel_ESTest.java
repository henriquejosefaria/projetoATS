/*
 * This file was automatically generated by EvoSuite
 * Tue Dec 10 16:09:43 GMT 2019
 */

package main.java.model;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import main.java.model.CarModel;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class CarModel_ESTest extends CarModel_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      CarModel.CarType carModel_CarType0 = CarModel.CarType.ELECTRIC;
      CarModel carModel0 = new CarModel(carModel_CarType0, 0.0, "W7M<E'PZbj=F");
      CarModel carModel1 = new CarModel(carModel_CarType0, (-1581.809), "");
      boolean boolean0 = carModel0.equals(carModel1);
      assertEquals((-1581.809), carModel1.getAvgSpeed(), 0.01);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      CarModel carModel0 = new CarModel((CarModel.CarType) null, 1.0, "Gasolina");
      carModel0.getType();
      assertEquals(1.0, carModel0.getAvgSpeed(), 0.01);
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      CarModel.CarType carModel_CarType0 = CarModel.CarType.GAS;
      CarModel carModel0 = new CarModel(carModel_CarType0, 4639.3592872024, (String) null);
      carModel0.getBrand();
      assertEquals(4639.3592872024, carModel0.getAvgSpeed(), 0.01);
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      CarModel.CarType carModel_CarType0 = CarModel.CarType.ANY;
      CarModel carModel0 = new CarModel(carModel_CarType0, 0.0, "cZwDi6");
      carModel0.getBrand();
      assertEquals(0.0, carModel0.getAvgSpeed(), 0.01);
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      CarModel.CarType carModel_CarType0 = CarModel.CarType.ANY;
      CarModel carModel0 = new CarModel(carModel_CarType0, 882.39738851, "");
      double double0 = carModel0.getAvgSpeed();
      assertEquals(882.39738851, double0, 0.01);
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      CarModel.CarType carModel_CarType0 = CarModel.CarType.ANY;
      CarModel carModel0 = new CarModel(carModel_CarType0, (-1.0), "");
      double double0 = carModel0.getAvgSpeed();
      assertEquals((-1.0), double0, 0.01);
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      CarModel.CarType carModel_CarType0 = CarModel.CarType.GAS;
      CarModel carModel0 = new CarModel(carModel_CarType0, (-927.915), (String) null);
      CarModel carModel1 = new CarModel(carModel_CarType0, (-927.915), (String) null);
      // Undeclared exception!
      try { 
        carModel0.equals(carModel1);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
      }
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      CarModel.CarType carModel_CarType0 = CarModel.CarType.fromString("Electrico");
      assertEquals(CarModel.CarType.ELECTRIC, carModel_CarType0);
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      CarModel.CarType carModel_CarType0 = CarModel.CarType.fromString("Todos");
      assertEquals(CarModel.CarType.ANY, carModel_CarType0);
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      CarModel.CarType carModel_CarType0 = CarModel.CarType.fromString("Gasolina");
      assertEquals(CarModel.CarType.GAS, carModel_CarType0);
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      try { 
        CarModel.CarType.fromString("");
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("main.java.model.CarModel$CarType", e);
      }
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      CarModel.CarType carModel_CarType0 = CarModel.CarType.fromString("Hibrido");
      assertEquals(CarModel.CarType.HYBRID, carModel_CarType0);
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      CarModel.CarType carModel_CarType0 = CarModel.CarType.ELECTRIC;
      CarModel.CarType carModel_CarType1 = CarModel.CarType.ANY;
      boolean boolean0 = carModel_CarType0.isEqual(carModel_CarType1);
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      CarModel.CarType carModel_CarType0 = CarModel.CarType.ANY;
      CarModel.CarType carModel_CarType1 = CarModel.CarType.HYBRID;
      boolean boolean0 = carModel_CarType0.isEqual(carModel_CarType1);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      CarModel.CarType carModel_CarType0 = CarModel.CarType.ELECTRIC;
      boolean boolean0 = carModel_CarType0.isEqual(carModel_CarType0);
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      CarModel.CarType carModel_CarType0 = CarModel.CarType.HYBRID;
      CarModel carModel0 = new CarModel(carModel_CarType0, (-0.10196698638424428), "64a$GB0_m\"}_ i\"A");
      CarModel.CarType carModel_CarType1 = CarModel.CarType.GAS;
      CarModel carModel1 = new CarModel(carModel_CarType1, (-0.10196698638424428), "64a$GB0_m\"}_ i\"A");
      boolean boolean0 = carModel0.equals(carModel1);
      assertFalse(boolean0);
      assertEquals((-0.10196698638424428), carModel1.getAvgSpeed(), 0.01);
  }

  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      CarModel.CarType carModel_CarType0 = CarModel.CarType.ELECTRIC;
      CarModel carModel0 = new CarModel(carModel_CarType0, (-341.81169227905934), "");
      CarModel carModel1 = new CarModel(carModel_CarType0, (-341.81169227905934), "");
      boolean boolean0 = carModel0.equals(carModel1);
      assertEquals((-341.81169227905934), carModel1.getAvgSpeed(), 0.01);
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      CarModel.CarType carModel_CarType0 = CarModel.CarType.ANY;
      CarModel carModel0 = new CarModel(carModel_CarType0, (-347.1997), "\"");
      CarModel carModel1 = new CarModel(carModel_CarType0, (-347.1997), "#");
      boolean boolean0 = carModel0.equals(carModel1);
      assertEquals((-347.1997), carModel1.getAvgSpeed(), 0.01);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      CarModel.CarType carModel_CarType0 = CarModel.CarType.ELECTRIC;
      CarModel carModel0 = new CarModel(carModel_CarType0, 0.0, "C");
      boolean boolean0 = carModel0.equals(carModel_CarType0);
      assertEquals(0.0, carModel0.getAvgSpeed(), 0.01);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      CarModel.CarType carModel_CarType0 = CarModel.CarType.ELECTRIC;
      CarModel carModel0 = new CarModel(carModel_CarType0, 0.0, "");
      boolean boolean0 = carModel0.equals((Object) null);
      assertFalse(boolean0);
      assertEquals(0.0, carModel0.getAvgSpeed(), 0.01);
  }

  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      CarModel.CarType carModel_CarType0 = CarModel.CarType.ELECTRIC;
      CarModel carModel0 = new CarModel(carModel_CarType0, (-341.81169227905934), "");
      boolean boolean0 = carModel0.equals(carModel0);
      assertTrue(boolean0);
      assertEquals((-341.81169227905934), carModel0.getAvgSpeed(), 0.01);
  }

  @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      CarModel.CarType carModel_CarType0 = CarModel.CarType.ELECTRIC;
      CarModel carModel0 = new CarModel(carModel_CarType0, 0.0, "W7M<E'PZbj=F");
      CarModel carModel1 = new CarModel(carModel_CarType0, 4111.32979892, "W7M<E'PZbj=F");
      boolean boolean0 = carModel0.equals(carModel1);
      assertFalse(carModel1.equals((Object)carModel0));
      assertFalse(boolean0);
      assertEquals(4111.32979892, carModel1.getAvgSpeed(), 0.01);
  }

  @Test(timeout = 4000)
  public void test22()  throws Throwable  {
      CarModel.CarType carModel_CarType0 = CarModel.CarType.ELECTRIC;
      CarModel carModel0 = new CarModel(carModel_CarType0, 0.0, "W7M<E'PZbj=F");
      double double0 = carModel0.getAvgSpeed();
      assertEquals(0.0, double0, 0.01);
  }

  @Test(timeout = 4000)
  public void test23()  throws Throwable  {
      CarModel.CarType carModel_CarType0 = CarModel.CarType.ELECTRIC;
      CarModel carModel0 = new CarModel(carModel_CarType0, (-341.81169227905934), "");
      carModel0.getBrand();
      assertEquals((-341.81169227905934), carModel0.getAvgSpeed(), 0.01);
  }

  @Test(timeout = 4000)
  public void test24()  throws Throwable  {
      CarModel.CarType carModel_CarType0 = CarModel.CarType.ELECTRIC;
      CarModel carModel0 = new CarModel(carModel_CarType0, 0.0, "");
      carModel0.getType();
      assertEquals(0.0, carModel0.getAvgSpeed(), 0.01);
  }

  @Test(timeout = 4000)
  public void test25()  throws Throwable  {
      CarModel.CarType carModel_CarType0 = CarModel.CarType.ELECTRIC;
      CarModel carModel0 = new CarModel(carModel_CarType0, 0.0, "W7M<E'PZbj=F");
      carModel0.hashCode();
      assertEquals(0.0, carModel0.getAvgSpeed(), 0.01);
  }
}
