-------------------------------------------------------------------------------
Test set: main.java.model.Weather_ESTest
-------------------------------------------------------------------------------
Tests run: 3, Failures: 0, Errors: 3, Skipped: 0, Time elapsed: 0.028 sec <<< FAILURE!
test0(main.java.model.Weather_ESTest)  Time elapsed: 0.004 sec  <<< ERROR!
java.lang.VerifyError: Operand stack overflow
Exception Details:
  Location:
    main/java/model/Weather.getSeasonDelay()D @3: new
  Reason:
    Exceeded max stack size.
  Current Frame:
    bci: @3
    flags: { }
    locals: { 'main/java/model/Weather' }
    stack: { }
  Bytecode:
    0000000: b800 15bb 003b 59b8 0029 9900 0e58 bb00
    0000010: 3d59 b700 3ea7 0006 b700 3f4c b800 152a
    0000020: b700 414d 023e 2cb6 0046 ab00 0000 0080
    0000030: 0000 0003 9401 ee2d 0000 0046 9446 2bcf
    0000040: 0000 0022 0021 4b9b 0000 006a 2c12 48b6
    0000050: 004c b800 5212 53b6 0057 b800 1599 004d
    0000060: 033e b800 5212 58b6 0057 b800 15a7 003d
    0000070: 2c12 5ab6 004c b800 5212 5bb6 0057 b800
    0000080: 1599 0029 043e b800 5212 5cb6 0057 b800
    0000090: 15a7 0019 2c12 5eb6 004c b800 5212 5fb6
    00000a0: 0057 b800 1599 0005 053e 1daa 0000 003d
    00000b0: 0000 0000 0000 0002 0000 0019 0000 0025
    00000c0: 0000 0031 b800 152b b600 6214 0063 73af
    00000d0: b800 152b b600 6214 0065 73af b800 152b
    00000e0: b600 6214 0067 73af b800 152b b600 6214
    00000f0: 0069 73af                              

	at main.java.model.Weather_ESTest.test0(Weather_ESTest.java:25)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:47)
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:44)
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)
	at org.junit.internal.runners.statements.FailOnTimeout$StatementThread.run(FailOnTimeout.java:74)

test1(main.java.model.Weather_ESTest)  Time elapsed: 0.004 sec  <<< ERROR!
java.lang.VerifyError: Operand stack overflow
Exception Details:
  Location:
    main/java/model/Weather.getSeasonDelay()D @3: new
  Reason:
    Exceeded max stack size.
  Current Frame:
    bci: @3
    flags: { }
    locals: { 'main/java/model/Weather' }
    stack: { }
  Bytecode:
    0000000: b800 15bb 003b 59b8 0029 9900 0e58 bb00
    0000010: 3d59 b700 3ea7 0006 b700 3f4c b800 152a
    0000020: b700 414d 023e 2cb6 0046 ab00 0000 0080
    0000030: 0000 0003 9401 ee2d 0000 0046 9446 2bcf
    0000040: 0000 0022 0021 4b9b 0000 006a 2c12 48b6
    0000050: 004c b800 5212 53b6 0057 b800 1599 004d
    0000060: 033e b800 5212 58b6 0057 b800 15a7 003d
    0000070: 2c12 5ab6 004c b800 5212 5bb6 0057 b800
    0000080: 1599 0029 043e b800 5212 5cb6 0057 b800
    0000090: 15a7 0019 2c12 5eb6 004c b800 5212 5fb6
    00000a0: 0057 b800 1599 0005 053e 1daa 0000 003d
    00000b0: 0000 0000 0000 0002 0000 0019 0000 0025
    00000c0: 0000 0031 b800 152b b600 6214 0063 73af
    00000d0: b800 152b b600 6214 0065 73af b800 152b
    00000e0: b600 6214 0067 73af b800 152b b600 6214
    00000f0: 0069 73af                              

	at main.java.model.Weather_ESTest.test1(Weather_ESTest.java:32)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:47)
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:44)
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)
	at org.junit.internal.runners.statements.FailOnTimeout$StatementThread.run(FailOnTimeout.java:74)

test2(main.java.model.Weather_ESTest)  Time elapsed: 0.011 sec  <<< ERROR!
java.lang.VerifyError: Operand stack overflow
Exception Details:
  Location:
    main/java/model/Weather.getSeasonDelay()D @3: new
  Reason:
    Exceeded max stack size.
  Current Frame:
    bci: @3
    flags: { }
    locals: { 'main/java/model/Weather' }
    stack: { }
  Bytecode:
    0000000: b800 15bb 003b 59b8 0029 9900 0e58 bb00
    0000010: 3d59 b700 3ea7 0006 b700 3f4c b800 152a
    0000020: b700 414d 023e 2cb6 0046 ab00 0000 0080
    0000030: 0000 0003 9401 ee2d 0000 0046 9446 2bcf
    0000040: 0000 0022 0021 4b9b 0000 006a 2c12 48b6
    0000050: 004c b800 5212 53b6 0057 b800 1599 004d
    0000060: 033e b800 5212 58b6 0057 b800 15a7 003d
    0000070: 2c12 5ab6 004c b800 5212 5bb6 0057 b800
    0000080: 1599 0029 043e b800 5212 5cb6 0057 b800
    0000090: 15a7 0019 2c12 5eb6 004c b800 5212 5fb6
    00000a0: 0057 b800 1599 0005 053e 1daa 0000 003d
    00000b0: 0000 0000 0000 0002 0000 0019 0000 0025
    00000c0: 0000 0031 b800 152b b600 6214 0063 73af
    00000d0: b800 152b b600 6214 0065 73af b800 152b
    00000e0: b600 6214 0067 73af b800 152b b600 6214
    00000f0: 0069 73af                              

	at main.java.model.Weather_ESTest.test2(Weather_ESTest.java:45)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:47)
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:44)
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)
	at org.junit.internal.runners.statements.FailOnTimeout$StatementThread.run(FailOnTimeout.java:74)

