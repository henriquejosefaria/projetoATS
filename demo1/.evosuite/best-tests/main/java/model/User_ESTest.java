/*
 * This file was automatically generated by EvoSuite
 * Thu Nov 21 22:27:31 GMT 2019
 */

package main.java.model;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import main.java.model.Client;
import main.java.model.Owner;
import main.java.model.User;
import main.java.utils.Point;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class User_ESTest extends User_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      Double double0 = new Double(1605);
      Point point0 = new Point(double0, double0);
      Client client0 = new Client(point0, "oN6!=kSk7zl!>d44", "9", "HI\"lapfdY{", "(XG&", 1605);
      client0.rate(1605);
      client0.rate((-1719145501));
      int int0 = client0.getRates();
      assertEquals((-859571948), int0);
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      Owner owner0 = new Owner("main.java.utils.Point", "main.java.utils.Point", "%&SG5~?4$*lL&Q|a<", 0, "main.java.utils.Point");
      assertEquals(100, owner0.getRates());
      
      owner0.rate(0);
      owner0.myclone();
      assertEquals(0, owner0.getRates());
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      Owner owner0 = new Owner("", "#bIMEo", "", (-2547), "");
      User user0 = owner0.myclone();
      assertEquals(100, user0.getRates());
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      Owner owner0 = new Owner("main.java.model.User", "main.java.model.User", "main.java.model.User", (-920), "");
      owner0.rate((-920));
      owner0.myclone();
      assertEquals((-920), owner0.getRates());
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      Double double0 = new Double(1572);
      Point point0 = new Point(double0, double0);
      Client client0 = new Client(point0, "oN6!=kSk7zl!>d44", "9", "q)3G", "(XG&", 1572);
      assertEquals(100, client0.getRates());
      
      client0.rate(0);
      int int0 = client0.getRates();
      assertEquals(0, int0);
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      Owner owner0 = new Owner("L_'", "", "L_'", 4, (String) null);
      String string0 = owner0.getPasswd();
      assertEquals(100, owner0.getRates());
      assertNull(string0);
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      Double double0 = new Double((-920.3));
      Point point0 = new Point(double0, double0);
      Client client0 = new Client(point0, "", "M_MXX~`wdK;5hHtsLz6", "", (String) null, 100);
      String string0 = client0.getPasswd();
      assertNotNull(string0);
      assertEquals(100, client0.getRates());
      assertEquals("M_MXX~`wdK;5hHtsLz6", string0);
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      Double double0 = new Double(2094.519621944);
      Point point0 = new Point(double0, double0);
      Client client0 = new Client(point0, "", "", "", "8/|9Zx>nr?g5", (-605));
      String string0 = client0.getPasswd();
      assertEquals("", string0);
      assertEquals(100, client0.getRates());
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      Owner owner0 = new Owner((String) null, "`vG:tV1+", "`vG:tV1+", (-2249), "`vG:tV1+");
      String string0 = owner0.getEmail();
      assertNull(string0);
      assertEquals(100, owner0.getRates());
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      Owner owner0 = new Owner("main.java.model.User", "iA7Dw9", "iA7Dw9", (-61), "]4',;_P{OxV&wR");
      String string0 = owner0.getEmail();
      assertEquals(100, owner0.getRates());
      assertEquals("main.java.model.User", string0);
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      Double double0 = new Double(2094.519621944);
      Point point0 = new Point(double0, double0);
      Client client0 = new Client(point0, "", "", "", "8/|9Zx>nr?g5", (-605));
      String string0 = client0.getEmail();
      assertEquals("", string0);
      assertEquals(100, client0.getRates());
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      Owner owner0 = new Owner("main.java.model.User", "main.java.model.User", "main.java.model.User", (-920), "");
      owner0.equals(owner0);
      assertEquals(100, owner0.getRates());
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      Owner owner0 = new Owner("", "#bIMEo", "", (-2547), "");
      owner0.equals("");
      assertEquals(100, owner0.getRates());
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      Client client0 = new Client((Point) null, "RfR@bYS", "RfR@bYS", "RfR@bYS", "Electrico", 0);
      // Undeclared exception!
      try { 
        client0.myclone();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("main.java.model.Client", e);
      }
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      Client client0 = new Client((Point) null, (String) null, "udAPeYp1,N7p,E", (String) null, "LSyd9pZ", (-1));
      Client client1 = new Client((Point) null, (String) null, "udAPeYp1,N7p,E", "f8", "R|79^Vf] D_w", (-3518));
      // Undeclared exception!
      try { 
        client0.equals(client1);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("main.java.model.Client", e);
      }
  }

  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      Double double0 = new Double((-2789));
      Point point0 = new Point(double0, double0);
      Client client0 = new Client(point0, "qj]rmL` hQ3>I7", "qj]rmL` hQ3>I7", "qj]rmL` hQ3>I7", "qj]rmL` hQ3>I7", (-2789));
      int int0 = client0.getRates();
      assertEquals(100, int0);
  }

  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      Double double0 = new Double((-2789));
      Point point0 = new Point(double0, double0);
      Client client0 = new Client(point0, "qj]rmL` hQ3>I7", "qj]rmL` hQ3>I7", "qj]rmL` hQ3>I7", "qj]rmL` hQ3>I7", (-2789));
      client0.hashCode();
      assertEquals(100, client0.getRates());
  }
}
